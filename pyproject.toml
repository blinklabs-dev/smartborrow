[project]
name = "smartborrow"
version = "0.1.0"
description = "AI-Powered Student Loan Intelligence Platform - AIE7 Certification Project"
authors = [
    {name = "SmartBorrow Team", email = "team@smartborrow.ai"}
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial",
    "Topic :: Education",
]

dependencies = [
    # Core LangChain ecosystem
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "langchain-core>=0.1.23",
    "langchain-openai>=0.0.8",
    "langchain-anthropic>=0.1.0",
    "langgraph>=0.0.30",
    "langsmith>=0.0.87",
    
    # Vector databases and embeddings
    "chromadb>=0.4.22",
    "qdrant-client>=1.7.0",
    "sentence-transformers>=2.2.2",
    "faiss-cpu>=1.7.4",
    
    # LLM providers
    "openai>=1.12.0",
    "anthropic>=0.18.0",
    "cohere>=4.47",
    
    # RAG and retrieval
    "pypdf>=4.0.1",
    "python-docx>=1.1.0",
    "unstructured>=0.12.4",
    "pymupdf>=1.23.26",
    "rank-bm25>=0.2.2",
    
    # Evaluation and synthetic data
    "ragas>=0.1.0",
    "datasets>=2.16.1",
    "evaluate>=0.4.1",
    
    # Web interface and APIs
    "streamlit>=1.31.0",
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    
    # Data processing and analysis
    "pandas>=2.2.0",
    "numpy>=1.26.3",
    "scikit-learn>=1.4.0",
    "matplotlib>=3.8.2",
    "seaborn>=0.13.2",
    "plotly>=5.18.0",
    
    # Financial data sources
    "yfinance>=0.2.18",
    "alpha-vantage>=2.3.1",
    
    # Utilities and infrastructure
    "python-dotenv>=1.0.1",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.26.0",
    "aiohttp>=3.9.1",
    "tenacity>=8.2.3",
    "tqdm>=4.66.1",
    "rich>=13.7.0",
    "typer>=0.9.0",
    
    # Development and testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.4",
    "pytest-cov>=4.0.0",
    "black>=24.1.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    
    # Monitoring and logging
    "structlog>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipykernel>=6.29.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.7",
    "safety>=2.3.5",
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.6",
    "mkdocstrings[python]>=0.24.0",
]

deployment = [
    "docker>=7.0.0",
    "gunicorn>=21.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
smartborrow = "smartborrow.cli:main"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["__pycache__", ".venv", "build", "dist"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers --cov=smartborrow --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "evaluation: marks tests as evaluation tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "qdrant_client.*",
    "ragas.*",
    "langchain.*",
    "langgraph.*",
    "streamlit.*",
    "plotly.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/smartborrow"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
